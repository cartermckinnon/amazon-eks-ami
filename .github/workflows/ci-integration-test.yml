name: '[CI] Integration test'
on:
  workflow_dispatch:
  workflow_call:
    inputs:
      build_id:
        required: true
        type: string
      ami_id:
        required: true
        type: string
      k8s_version:
        required: true
        type: string        
jobs:
  launch:
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    outputs:
      cluster_name: ${{ steps.create_cluster.outputs.cluster_name }}    
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
      - name: create_cluster
        run: |
          wget --no-verbose -O eksctl.tar.gz "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_Linux_amd64.tar.gz"
          tar xf eksctl.tar.gz && chmod +x ./eksctl
          SANITIZED_K8S_VERSION=$(echo ${{ inputs.k8s_version }} | tr -d '.')
          CLUSTER_NAME="$SANITIZED_K8S_VERSION"
          echo '---
          apiVersion: eksctl.io/v1alpha5
          kind: ClusterConfig
          metadata:
            name: "'$CLUSTER_NAME'"
            region: "${{ secrets.AWS_REGION }}"
            version: "${{ inputs.k8s_version }}"
          nodeGroups:
          - name: "${{ inputs.build_id }}"
            instanceType: t2.micro
            minSize: 1
            maxSize: 1
            desiredCapacity: 1
            ami: "${{ inputs.ami_id }}"
            overrideBootstrapCommand: |
              #!/bin/bash
              source /var/lib/cloud/scripts/eksctl/bootstrap.helper.sh
              /etc/eks/bootstrap.sh "'$CLUSTER_NAME'" --kubelet-extra-args "--node-labels=${NODE_LABELS}"' >> cluster.yaml
          cat cluster.yaml
          ./eksctl create cluster --config-file cluster.yaml
          echo "cluster_name=$CLUSTER_NAME" >> $GITHUB_OUTPUT
  sonobuoy:
    needs: launch
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write  
    runs-on: ubuntu-latest
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
      - run: aws eks update-kubeconfig --name ${{ needs.launch.outputs.cluster_name }}
      - run: |
          wget --no-verbose -O sonobuoy.tar.gz "https://github.com/vmware-tanzu/sonobuoy/releases/download/v0.56.11/sonobuoy_0.56.11_linux_amd64.tar.gz"
          tar xf sonobuoy.tar.gz && chmod +x ./sonobuoy
          ./sonobuoy run --wait